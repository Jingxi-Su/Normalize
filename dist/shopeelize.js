!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";const e=(n,i,s)=>{if(!i||i.length<=0)throw new Error("normalize: schema invalid!");return i.getName?t(n,i,e,s):r(n,i,e,s)},t=(e,t,r,n)=>{const i=JSON.parse(JSON.stringify(e));return Object.keys(t.schema).forEach((e=>{const s=t.schema[e],o=i[e];i[e]=r(o,s,n)})),n(i,t),t.getId(e)},r=(e,t,r,n)=>{const i=JSON.parse(JSON.stringify(e)),s=[];if(Array.isArray(t)){for(let e=0;e<i.length;e++){const o=t[e]||t[t.length-1],a=i[e],c=r(a,o,n);s.push(c)}return s}return Object.keys(t).forEach((e=>{const s=t[e],o=i[e];i[e]=r(o,s,n)})),i},n=class{constructor(e,t={},r={}){this.name=e,this.idAttribute=r.idAttribute||"id",this.init(t)}getName(){return this.name}getId(e){return e[this.idAttribute]}init(e){this.schema={};for(const t in e)e.hasOwnProperty(t)&&(this.schema[t]=e[t])}},i=(e,t,r,n,i)=>{const s=n(e,t);if(i[t.getName()]||(i[t.getName()]={}),!i[t.getName()][e]){const n=JSON.parse(JSON.stringify(s));Object.keys(t.schema).forEach((e=>{if(n.hasOwnProperty(e)){const i=t.schema[e],s=n[e];n[e]=r(s,i)}})),i[t.getName()][e]=n}return i[t.getName()][e]},s=(e,t,r)=>{const n=JSON.parse(JSON.stringify(e)),i=[];if(Array.isArray(t)){for(let e=0;e<n.length;e++){let s=n[e];const o=t[e]||t[t.length-1];s&&(s=n[e]=r(s,o)),i.push(s)}return i}return Object.keys(t).forEach((e=>{let i=n[e];const s=t[e];i&&(i=n[e]=r(i,s))})),n},o=e=>(t,r)=>{const n=r.getName();return"object"==typeof t?t:e[n][t]},a=new n("users",{},{idAttribute:"uid"}),c=new n("comments",{commenter:a}),m=new n("articles",{author:a,comments:{result:[c]}}),h=((t,r)=>{if(!t)throw new Error("normalize: data invalid!");if(!r)throw new Error("normalize: schema invalid!");const n={},i=(e=>function(t,r){const n=r.getName(),i=r.getId(t);n in e||(e[n]={});const s=e[n][i];e[n][i]=s?Object.assign(s,t):t})(n);return{entities:n,result:e(t,r,i)}})({id:"123",author:{uid:"1",name:"Paul"},title:"My awesome blog post",comments:{total:100,result:[{id:"324",commenter:{uid:"2",name:"Nicole"}},{id:"325",commenter:{uid:"3",name:"Cici"}}]}},m);console.log(JSON.stringify(h));const{result:l,entities:u}=h,f=((e,t,r)=>{if(!e)throw new Error("denormalize: result invalid!");if(!t)throw new Error("denormalize: schema invalid!");if(!r)throw new Error("denormalize: entities invalid!");return(e=>{const t={},r=o(e);return function e(n,o){if(!o||o.length<=0)throw new Error("normalize: schema invalid!");return o.getName?i(n,o,e,r,t):s(n,o,e)}})(r)(e,t)})(l,m,u);console.log(JSON.stringify(f))}));
